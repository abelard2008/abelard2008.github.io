#+STARTUP: showall indent
#+STARTUP: hidestars
#+OPTIONS:   H:2 num:nil toc:nil \n:nil ::t |:t -:t f:t *:t <:t
#+OPTIONS:   tex:t  d:nil todo:t pri:nil tags:not-in-toc
#+BEGIN_HTML
---
category: computer science and enginneering
layout: post
title: "Antlr: An amazing framework for constructing recognizers interpreters compilers and translators"
tags: ["language",compiler]
---
{% include JB/setup %}

#+END_HTML
* 计算机语言常识
- 本质 the nature of computer languages dictates the way you specify languages with grammars. 计算机语言的本质要求你用文法来规范语言。
- 一般论述 
  状态机只能产生正则语言(regula language)，编程语言要求更加复杂的文法
  无关语言，因此正则语言和编程语言的区别，正是状态机和更加复杂机器的区
  别。状态机的弱点是没有内存来记录过去发生的事情，但是为了产生更加复杂
  的语言，记忆功能是必须的。
  
- 复杂语言，是基于树结构的。产生语言的过程，就是构建树的的过程。并且，
  树结构与方法调用能完美匹配，加方法调用和返回机制就将状态机变成一台能
  产生复杂语言的机器。使用树结构需要内存系统的参与，更进一步，使用内存
  系统的状态机，即使用堆栈的状态机是一台下推自动机(pushdown machine)。

- 状态机就是在一个方法中的指令流，不能产生方法调用，而下推机能自由调用
  机器的其它部分和返回(与方法调用类似)，这是因为下推机有堆栈，并且这些
  堆栈能将一台机器分成子机器，这些子机器直接与文法规则对应。表示下推机
  要求不同的称为语法图(与流程图类似)的可视化。

- 语言本质上是高度递归的，没有递归，我们不能任意地产生嵌套的代码块。递
  归是让人生畏的，就像L. Peter Deutsch说的，人用迭代，神用递归 (To
  iterate is human, to recurse divine)。
- 正则表达式 一个模式描述，它用一个元语言来描述你想要该模式来匹配的事
  情。A regular expression is a pattern description using a metalanguage, a language that you use to describe what you want the pattern to match.

- 语法范畴 Programming language grammars usually refer to words based on their parts of speech, sometimes called syntactic categories。译: 编程语言文法通常
指基于某种语言词汇的单词，有时称为语法范畴。

Sentence -> Subject verb Object endmark

verb 和 endmark 是 part of speech (词类)，subject 和 object是语
法变量，sentence可以由遵循上面这个规则形式组成的任何字符串。
* 运行The Definitive ANTLR Reference的例子
- 版本说明 书的版本为First printing, May 2007 ，全称为The Definitive
  ANTLR Reference: Building Domain-Specific Languages。
- 软件版本说明，该书的例子使用ANTLR V3
运行例子，需要三个包 antlr-3.0.jar, antlr-2.7.7.jar和
stringtemplate-3.0.jar，因此，运行例子前，需要将这三个包加载到
CLASSPATH路径中。
